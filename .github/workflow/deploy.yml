name: SpearPoint Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and Push Backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./packages/dashboard/backend
          file: ./packages/dashboard/backend/Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/spearpoint-backend:latest
      
      - name: Build and Push Frontend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./packages/dashboard/frontend
          file: ./packages/dashboard/frontend/Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/spearpoint-frontend:latest
      
      - name: Update ECS Services
        run: |
          aws ecs update-service --cluster spearpoint-cluster --service spearpoint-backend-service --force-new-deployment
          aws ecs update-service --cluster spearpoint-cluster --service spearpoint-frontend-service --force-new-deployment
        
      - name: Verify Deployment
        run: |
          echo "Waiting for services to stabilize..."
          aws ecs wait services-stable --cluster spearpoint-cluster --services spearpoint-backend-service spearpoint-frontend-service
          echo "Deployment completed successfully!"